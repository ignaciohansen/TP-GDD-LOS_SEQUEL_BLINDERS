USE [GD1C2020]
GO

/* -------------------------------------------------------------------------------------------------
 * Chequeamos si existe el esquema.
 *   Si no existe, lo creamos.
 *   Si existe, lo limpiamos.
 * -------------------------------------------------------------------------------------------------
 */

DECLARE @Schema VARCHAR(30) = 'LOS_SEQUEL_BLINDERS'
IF NOT EXISTS (select * from sys.schemas where name = @Schema)
BEGIN
	EXEC ('CREATE SCHEMA ' + @Schema)
	PRINT 'Esquema creado!'
END
ELSE
BEGIN
	-- BORRO TODO LO QUE HAYA EN EL ESQUEMA
	DECLARE @Sql VARCHAR(MAX);

	--views
	SELECT @Sql = COALESCE(@Sql,'') + 'DROP VIEW %SCHEMA%.' + QUOTENAME(TABLE_NAME) + ';' + CHAR(13)
	FROM INFORMATION_SCHEMA.TABLES
	WHERE TABLE_SCHEMA = @Schema
		AND TABLE_TYPE = 'VIEW'
	ORDER BY TABLE_NAME

	--Procedures
	SELECT @Sql = COALESCE(@Sql,'') + 'DROP PROCEDURE %SCHEMA%.' + QUOTENAME(ROUTINE_NAME) + ';' + CHAR(13)
	FROM INFORMATION_SCHEMA.ROUTINES
	WHERE ROUTINE_SCHEMA = @Schema
		AND ROUTINE_TYPE = 'PROCEDURE'
	ORDER BY ROUTINE_NAME

	--Functions
	SELECT @Sql = COALESCE(@Sql,'') + 'DROP FUNCTION %SCHEMA%.' + QUOTENAME(ROUTINE_NAME) + ';' + CHAR(13)
	FROM INFORMATION_SCHEMA.ROUTINES
	WHERE ROUTINE_SCHEMA = @Schema
		AND ROUTINE_TYPE = 'FUNCTION'
	ORDER BY ROUTINE_NAME

	SELECT @Sql = COALESCE(REPLACE(@Sql,'%SCHEMA%',@Schema), '')
	EXEC sp_sqlexec @Sql
END
GO


/* -------------------------------------------------------------------------------------------------
 * Creamos los store procedures
 * -------------------------------------------------------------------------------------------------
 */

CREATE PROCEDURE LOS_SEQUEL_BLINDERS.sp_borrar_tabla (@tabla VARCHAR(30)) AS
BEGIN
	DECLARE @SqlDel VARCHAR(MAX), @esquema VARCHAR(30) = 'LOS_SEQUEL_BLINDERS'
	IF ( EXISTS(
		SELECT 
			TABLE_NAME
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = @tabla
		AND	  TABLE_SCHEMA = @esquema)
	)
	BEGIN
		SET @SqlDel = 'DROP TABLE ['+ @esquema +'].' + QUOTENAME(@tabla) + ';'
		EXEC sp_sqlexec @SqlDel
		print @SqlDel
	END
END
GO

/* -------------------------------------------------------------------------------------------------
 * Borramos las tablas en el orden correcto para no tener problemas con las FK
 * -------------------------------------------------------------------------------------------------
 */

exec LOS_SEQUEL_BLINDERS.sp_borrar_tabla 'OPERACION_X_PRODUCTO';
exec LOS_SEQUEL_BLINDERS.sp_borrar_tabla 'PASAJE';
exec LOS_SEQUEL_BLINDERS.sp_borrar_tabla 'BUTACA';
exec LOS_SEQUEL_BLINDERS.sp_borrar_tabla 'BUTACA_TIPO';
exec LOS_SEQUEL_BLINDERS.sp_borrar_tabla 'VUELO';
exec LOS_SEQUEL_BLINDERS.sp_borrar_tabla 'RUTA';
exec LOS_SEQUEL_BLINDERS.sp_borrar_tabla 'CIUDAD';
exec LOS_SEQUEL_BLINDERS.sp_borrar_tabla 'AVION';
exec LOS_SEQUEL_BLINDERS.sp_borrar_tabla 'COMPRA';
exec LOS_SEQUEL_BLINDERS.sp_borrar_tabla 'EMPRESA';
exec LOS_SEQUEL_BLINDERS.sp_borrar_tabla 'ESTADIA';
exec LOS_SEQUEL_BLINDERS.sp_borrar_tabla 'HABITACION';
exec LOS_SEQUEL_BLINDERS.sp_borrar_tabla 'TIPO_HABITACION';
exec LOS_SEQUEL_BLINDERS.sp_borrar_tabla 'HOTEL';
exec LOS_SEQUEL_BLINDERS.sp_borrar_tabla 'FACTURA';
exec LOS_SEQUEL_BLINDERS.sp_borrar_tabla 'SUCURSAL';
exec LOS_SEQUEL_BLINDERS.sp_borrar_tabla 'CLIENTE';

/* -------------------------------------------------------------------------------------------------
 * Creamos las tablas
 * -------------------------------------------------------------------------------------------------
 */

CREATE TABLE LOS_SEQUEL_BLINDERS.EMPRESA(
	EMPRESA_ID int PRIMARY KEY IDENTITY,
	EMPRESA_RAZON_SOCIAL NVARCHAR(255) NOT NULL
)

CREATE TABLE LOS_SEQUEL_BLINDERS.COMPRA(
	COMPRA_NRO decimal(18, 0) PRIMARY KEY,
	EMPRESA_ID int FOREIGN KEY REFERENCES LOS_SEQUEL_BLINDERS.EMPRESA(EMPRESA_ID),
	COMPRA_FECHA datetime2(3) NOT NULL
)

CREATE INDEX COMPRA_INDEX ON LOS_SEQUEL_BLINDERS.COMPRA(COMPRA_NRO)

CREATE TABLE LOS_SEQUEL_BLINDERS.TIPO_HABITACION(
	TIPO_HABITACION_CODIGO decimal(18, 0) PRIMARY KEY,
	TIPO_HABITACION_DESC NVARCHAR(100) NOT NULL
)

CREATE TABLE LOS_SEQUEL_BLINDERS.HOTEL(
	HOTEL_ID int PRIMARY KEY IDENTITY,
	HOTEL_CALLE NVARCHAR(100) NOT NULL,
	HOTEL_NRO_CALLE decimal(18,0) NOT NULL,
	HOTEL_CANTIDAD_ESTRELLAS decimal(18,0) NOT NULL
)

CREATE TABLE LOS_SEQUEL_BLINDERS.HABITACION(
	
	HABITACION_ID int PRIMARY KEY IDENTITY,
	TIPO_HABITACION_CODIGO decimal(18,0) FOREIGN KEY REFERENCES LOS_SEQUEL_BLINDERS.TIPO_HABITACION(TIPO_HABITACION_CODIGO),
	HABITACION_NRO decimal(18,0) NOT NULL,
	HABITACION_PISO decimal(18,0) NOT NULL,
	HABITACION_FRENTE nvarchar(100) NOT NULL,
	HABITACION_COSTO decimal(18,2) NOT NULL,
	HABITACION_PRECIO decimal(18,2) NOT NULL,
	HOTEL_ID int FOREIGN KEY REFERENCES LOS_SEQUEL_BLINDERS.HOTEL(HOTEL_ID)
)

CREATE TABLE LOS_SEQUEL_BLINDERS.ESTADIA(
	
	ESTADIA_CODIGO decimal(18,0) PRIMARY KEY,
	ESTADIA_FECHA_INI datetime2(3) NOT NULL,
	ESTADIA_CANTIDAD_NOCHES decimal(18,0) NOT NULL,
	HABITACION_ID int FOREIGN KEY REFERENCES LOS_SEQUEL_BLINDERS.HABITACION(HABITACION_ID),
	ESTADIA_COSTO decimal(18,2),
	ESTADIA_PRECIO decimal(18,2)
)

CREATE INDEX ESTADIA_INDEX ON LOS_SEQUEL_BLINDERS.ESTADIA(ESTADIA_CODIGO)

CREATE TABLE LOS_SEQUEL_BLINDERS.CLIENTE(
	
	[CLIENTE_ID] int PRIMARY KEY IDENTITY,
	[CLIENTE_APELLIDO] [nvarchar](255) NOT NULL,
	[CLIENTE_NOMBRE] [nvarchar](255) NOT NULL,
	[CLIENTE_DNI] [decimal](18, 0) NOT NULL,
	[CLIENTE_FECHA_NAC] [datetime2](3) NOT NULL,
	[CLIENTE_MAIL] [nvarchar](255) NOT NULL,
	[CLIENTE_TELEFONO] [int] NOT NULL,
)

CREATE INDEX CLIENTE_INDEX ON LOS_SEQUEL_BLINDERS.CLIENTE(CLIENTE_DNI)

CREATE TABLE LOS_SEQUEL_BLINDERS.SUCURSAL(
	
	[SUCURSAL_ID] int PRIMARY KEY IDENTITY,
	[SUCURSAL_DIR] [nvarchar](255) NOT NULL,
	[SUCURSAL_MAIL] [nvarchar](255) NOT NULL,
	[SUCURSAL_TELEFONO] [decimal](18, 0) NOT NULL
)

CREATE TABLE LOS_SEQUEL_BLINDERS.FACTURA(
	
	[FACTURA_NRO] [decimal](18, 0) PRIMARY KEY,
	[FACTURA_FECHA] [datetime2](3) NOT NULL,
	[SUCURSAL_ID] int FOREIGN KEY REFERENCES LOS_SEQUEL_BLINDERS.SUCURSAL(SUCURSAL_ID),
	[CLIENTE_ID] int FOREIGN KEY REFERENCES LOS_SEQUEL_BLINDERS.CLIENTE(CLIENTE_ID),
)

CREATE INDEX FACTURA_INDEX ON LOS_SEQUEL_BLINDERS.FACTURA(FACTURA_NRO)

CREATE TABLE LOS_SEQUEL_BLINDERS.AVION(
	AVION_IDENTIFICADOR NVARCHAR(50) PRIMARY KEY,
	AVION_MODELO NVARCHAR(50)
)

CREATE TABLE LOS_SEQUEL_BLINDERS.CIUDAD(
	CIUDAD_ID INT PRIMARY KEY IDENTITY,
	CIUDAD_NOMBRE NVARCHAR(255) NOT NULL
)

CREATE TABLE LOS_SEQUEL_BLINDERS.RUTA(
	RUTA_ID INT PRIMARY KEY IDENTITY,
	RUTA_AEREA_CODIGO DECIMAL(18,0) NOT NULL,
	CIU_ORIG_ID INT FOREIGN KEY REFERENCES LOS_SEQUEL_BLINDERS.CIUDAD(CIUDAD_ID),
	CIU_DEST_ID INT FOREIGN KEY REFERENCES LOS_SEQUEL_BLINDERS.CIUDAD(CIUDAD_ID)
)

CREATE TABLE LOS_SEQUEL_BLINDERS.VUELO(
	VUELO_CODIGO DECIMAL(19,0) PRIMARY KEY,
	VUELO_FECHA_SALIDA DATETIME2(3),
	VUELO_FECHA_LLEGADA DATETIME2(3),
	RUTA_ID INT FOREIGN KEY REFERENCES LOS_SEQUEL_BLINDERS.RUTA(RUTA_ID),
	AVION_IDENTIFICADOR NVARCHAR(50) FOREIGN KEY REFERENCES LOS_SEQUEL_BLINDERS.AVION(AVION_IDENTIFICADOR)
)

CREATE INDEX VUELO_INDEX ON LOS_SEQUEL_BLINDERS.VUELO(VUELO_CODIGO)

CREATE TABLE LOS_SEQUEL_BLINDERS.BUTACA_TIPO(
	BUTACA_TIPO_ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
	BUTACA_TIPO_DESC NVARCHAR(255) NOT NULL
)

CREATE TABLE LOS_SEQUEL_BLINDERS.BUTACA(
	BUTACA_ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
	BUTACA_NRO DECIMAL(18,0) NOT NULL,
	BUTACA_TIPO_ID INT FOREIGN KEY REFERENCES LOS_SEQUEL_BLINDERS.BUTACA_TIPO(BUTACA_TIPO_ID)
)

CREATE TABLE LOS_SEQUEL_BLINDERS.PASAJE(
	PASAJE_CODIGO DECIMAL(18,0) PRIMARY KEY NOT NULL,
	PASAJE_COSTO DECIMAL(18,2) NOT NULL,
	PASAJE_PRECIO DECIMAL(18,2) NOT NULL,
	BUTACA_ID INT FOREIGN KEY REFERENCES LOS_SEQUEL_BLINDERS.BUTACA(BUTACA_ID),
	VUELO_CODIGO DECIMAL(19,0) FOREIGN KEY REFERENCES LOS_SEQUEL_BLINDERS.VUELO(VUELO_CODIGO)
)

CREATE INDEX PASAJE_INDEX ON LOS_SEQUEL_BLINDERS.PASAJE(PASAJE_CODIGO)

CREATE TABLE LOS_SEQUEL_BLINDERS.OPERACION_X_PRODUCTO(
	TRANSACCION_ID INT PRIMARY KEY IDENTITY(1,1),
	COMPRA_NRO decimal(18, 0) FOREIGN KEY REFERENCES LOS_SEQUEL_BLINDERS.COMPRA(COMPRA_NRO),
	FACTURA_NRO decimal(18, 0) FOREIGN KEY REFERENCES LOS_SEQUEL_BLINDERS.FACTURA(FACTURA_NRO) NULL,
	ESTADIA_CODIGO decimal(18,0) FOREIGN KEY REFERENCES LOS_SEQUEL_BLINDERS.ESTADIA(ESTADIA_CODIGO) NULL,
	PASAJE_CODIGO DECIMAL(18,0) FOREIGN KEY REFERENCES LOS_SEQUEL_BLINDERS.PASAJE(PASAJE_CODIGO) NULL
)


/* -------------------------------------------------------------------------------------------------
 * Cargamos los datos en las tablas
 * -------------------------------------------------------------------------------------------------
 */

-- CLIENTES
INSERT INTO LOS_SEQUEL_BLINDERS.CLIENTE
SELECT DISTINCT
	CLIENTE_APELLIDO,
	CLIENTE_NOMBRE,
	CLIENTE_DNI,
	CLIENTE_FECHA_NAC,
	CLIENTE_MAIL,
	CLIENTE_TELEFONO
FROM gd_esquema.Maestra
WHERE CLIENTE_NOMBRE is not null and CLIENTE_APELLIDO is not null;


-- SUCURSALES
INSERT INTO LOS_SEQUEL_BLINDERS.SUCURSAL
SELECT DISTINCT
	SUCURSAL_DIR,
	SUCURSAL_MAIL,
	SUCURSAL_TELEFONO
FROM gd_esquema.Maestra
WHERE SUCURSAL_DIR is not null;

-- FACTURAS
INSERT INTO LOS_SEQUEL_BLINDERS.FACTURA
SELECT DISTINCT
	M.FACTURA_NRO,
	M.FACTURA_FECHA,
	S.SUCURSAL_ID,
	C.CLIENTE_ID
FROM gd_esquema.Maestra M 
join LOS_SEQUEL_BLINDERS.SUCURSAL S on M.SUCURSAL_DIR = S.SUCURSAL_DIR AND M.SUCURSAL_MAIL = S.SUCURSAL_MAIL
join LOS_SEQUEL_BLINDERS.CLIENTE C on M.CLIENTE_APELLIDO = C.CLIENTE_APELLIDO AND M.CLIENTE_NOMBRE = C.CLIENTE_NOMBRE AND M.CLIENTE_DNI = C.CLIENTE_DNI
WHERE M.FACTURA_NRO is not null;


-- EMPRESAS
INSERT INTO LOS_SEQUEL_BLINDERS.EMPRESA 
SELECT DISTINCT
	EMPRESA_RAZON_SOCIAL
FROM gd_esquema.Maestra
WHERE EMPRESA_RAZON_SOCIAL is not null;

-- COMPRAS
INSERT INTO LOS_SEQUEL_BLINDERS.COMPRA
SELECT DISTINCT
	COMPRA_NUMERO,
	E.EMPRESA_ID,
	COMPRA_FECHA
FROM gd_esquema.Maestra M 
LEFT JOIN LOS_SEQUEL_BLINDERS.EMPRESA E on
	 M.EMPRESA_RAZON_SOCIAL = E.EMPRESA_RAZON_SOCIAL
WHERE COMPRA_NUMERO is not null;

-- TIPO_HABITACION
INSERT INTO LOS_SEQUEL_BLINDERS.TIPO_HABITACION 
SELECT DISTINCT
	TIPO_HABITACION_CODIGO,
	TIPO_HABITACION_DESC
FROM gd_esquema.Maestra
WHERE TIPO_HABITACION_CODIGO is not null;

-- HOTEL
INSERT INTO LOS_SEQUEL_BLINDERS.HOTEL
SELECT DISTINCT
	--HOTEL_ID,
	HOTEL_CALLE,
	HOTEL_NRO_CALLE,
	HOTEL_CANTIDAD_ESTRELLAS
FROM gd_esquema.Maestra M 
WHERE HOTEL_CALLE is not null AND HOTEL_NRO_CALLE is not null;

-- HABITACION
INSERT INTO LOS_SEQUEL_BLINDERS.HABITACION
SELECT DISTINCT
	M.TIPO_HABITACION_CODIGO,
	M.HABITACION_NUMERO	AS HABITACION_NRO,
	M.HABITACION_PISO,
	M.HABITACION_FRENTE,
	M.HABITACION_COSTO,
	M.HABITACION_PRECIO,
	H.HOTEL_ID
FROM gd_esquema.Maestra M 
INNER JOIN LOS_SEQUEL_BLINDERS.HOTEL H ON (M.HOTEL_CALLE = H.HOTEL_CALLE AND M.HOTEL_NRO_CALLE = H.HOTEL_NRO_CALLE)
WHERE M.HABITACION_NUMERO is not null and M.HABITACION_PISO is not null;


-- ESTADIA
INSERT INTO LOS_SEQUEL_BLINDERS.ESTADIA
SELECT DISTINCT
	M.ESTADIA_CODIGO,
	M.ESTADIA_FECHA_INI,
	M.ESTADIA_CANTIDAD_NOCHES,
	HB.HABITACION_ID,
	M.HABITACION_COSTO,
	M.HABITACION_PRECIO
FROM gd_esquema.Maestra M
JOIN LOS_SEQUEL_BLINDERS.HOTEL H ON (M.HOTEL_CALLE = H.HOTEL_CALLE AND M.HOTEL_NRO_CALLE = H.HOTEL_NRO_CALLE)
INNER JOIN LOS_SEQUEL_BLINDERS.HABITACION HB ON (M.HABITACION_NUMERO = HB.HABITACION_NRO AND M.HABITACION_PISO = HB.HABITACION_PISO AND H.HOTEL_ID = HB.HOTEL_ID)
WHERE M.ESTADIA_CODIGO is not null;


-- AVIONES
INSERT INTO LOS_SEQUEL_BLINDERS.AVION
SELECT DISTINCT
	AVION_IDENTIFICADOR,
	AVION_MODELO
FROM gd_esquema.Maestra
WHERE AVION_IDENTIFICADOR IS NOT NULL;

-- CIUDADES
INSERT INTO LOS_SEQUEL_BLINDERS.CIUDAD
SELECT DISTINCT
	RUTA_AEREA_CIU_DEST
FROM gd_esquema.Maestra
WHERE RUTA_AEREA_CIU_DEST IS NOT NULL
UNION
SELECT DISTINCT
	RUTA_AEREA_CIU_ORIG
FROM gd_esquema.Maestra
WHERE RUTA_AEREA_CIU_ORIG IS NOT NULL

-- RUTAS
INSERT INTO LOS_SEQUEL_BLINDERS.RUTA
SELECT DISTINCT
	M.RUTA_AEREA_CODIGO			AS RUTA_AEREA_CODIGO,
	CO.CIUDAD_ID				AS CIU_ORIG_ID,
	CD.CIUDAD_ID				AS CIU_DEST_ID
FROM gd_esquema.Maestra M 
LEFT JOIN LOS_SEQUEL_BLINDERS.CIUDAD CO
	ON M.RUTA_AEREA_CIU_ORIG = CO.CIUDAD_NOMBRE
LEFT JOIN LOS_SEQUEL_BLINDERS.CIUDAD CD
	ON M.RUTA_AEREA_CIU_DEST = CD.CIUDAD_NOMBRE
WHERE RUTA_AEREA_CODIGO IS NOT NULL;

-- VUELOS
INSERT INTO LOS_SEQUEL_BLINDERS.VUELO
SELECT DISTINCT
	VUELO_CODIGO,
	VUELO_FECHA_SALUDA,
	VUELO_FECHA_LLEGADA,
	R.RUTA_ID,
	AVION_IDENTIFICADOR
FROM gd_esquema.Maestra M
LEFT JOIN LOS_SEQUEL_BLINDERS.CIUDAD CD
ON	M.RUTA_AEREA_CIU_DEST = CD.CIUDAD_NOMBRE
LEFT JOIN LOS_SEQUEL_BLINDERS.CIUDAD CO
ON	M.RUTA_AEREA_CIU_ORIG = CO.CIUDAD_NOMBRE
LEFT JOIN LOS_SEQUEL_BLINDERS.RUTA R
ON  M.RUTA_AEREA_CODIGO = R.RUTA_AEREA_CODIGO
AND R.CIU_DEST_ID = CD.CIUDAD_ID
AND R.CIU_ORIG_ID = CO.CIUDAD_ID
WHERE VUELO_CODIGO IS NOT NULL

--BUTACA_TIPO
INSERT INTO LOS_SEQUEL_BLINDERS.BUTACA_TIPO
SELECT DISTINCT
	M.BUTACA_TIPO
FROM gd_esquema.Maestra M
WHERE BUTACA_NUMERO IS NOT NULL
ORDER BY 1

--BUTACA
INSERT INTO LOS_SEQUEL_BLINDERS.BUTACA
SELECT DISTINCT
	BUTACA_NUMERO			AS BUTACA_NRO,
	B.BUTACA_TIPO_ID
FROM gd_esquema.Maestra M 
LEFT JOIN LOS_SEQUEL_BLINDERS.BUTACA_TIPO B
ON M.BUTACA_TIPO = B.BUTACA_TIPO_DESC
WHERE BUTACA_NUMERO IS NOT NULL
ORDER BY 1

-- PASAJE
INSERT INTO LOS_SEQUEL_BLINDERS.PASAJE
SELECT DISTINCT 
	M.PASAJE_CODIGO,
	M.PASAJE_COSTO,			
	M.PASAJE_PRECIO,			
	B.BUTACA_ID AS BUTACA_ID,				
	V.VUELO_CODIGO			
FROM gd_esquema.Maestra M
LEFT JOIN LOS_SEQUEL_BLINDERS.BUTACA_TIPO BT
ON M.BUTACA_TIPO = BT.BUTACA_TIPO_DESC
LEFT JOIN LOS_SEQUEL_BLINDERS.BUTACA B 
ON M.BUTACA_NUMERO = B.BUTACA_NRO
AND B.BUTACA_TIPO_ID = BT.BUTACA_TIPO_ID
LEFT JOIN LOS_SEQUEL_BLINDERS.VUELO V 
ON M.AVION_IDENTIFICADOR = V.AVION_IDENTIFICADOR
AND M.VUELO_CODIGO = V.VUELO_CODIGO
WHERE  PASAJE_CODIGO IS NOT NULL
ORDER BY 1

--OPERACION_X_PRODUCTO
INSERT INTO LOS_SEQUEL_BLINDERS.OPERACION_X_PRODUCTO
SELECT DISTINCT
	COMPRA_NUMERO AS COMPRA_NRO,
	FACTURA_NRO,
	ESTADIA_CODIGO,
	PASAJE_CODIGO
FROM gd_esquema.Maestra
WHERE COMPRA_NUMERO IS NOT NULL OR FACTURA_NRO IS NOT NULL OR ESTADIA_CODIGO IS NOT NULL OR PASAJE_CODIGO IS NOT NULL