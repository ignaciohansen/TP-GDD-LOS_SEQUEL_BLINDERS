USE [GD1C2020]
GO

/* -------------------------------------------------------------------------------------------------
 * Chequeamos si existe el esquema.
 *   Si no existe, lo creamos.
 *   Si existe, lo limpiamos.
 * -------------------------------------------------------------------------------------------------
 */

DECLARE @Schema VARCHAR(30) = 'LOS_SEQUEL_BLINDERS_BI'
IF NOT EXISTS (select * from sys.schemas where name = @Schema)
BEGIN
	EXEC ('CREATE SCHEMA ' + @Schema)
	PRINT 'Esquema creado!'
END
ELSE
BEGIN
	-- BORRO TODO LO QUE HAYA EN EL ESQUEMA
	DECLARE @Sql VARCHAR(MAX);
	
	--Procedures
	SELECT @Sql = COALESCE(@Sql,'') + 'DROP PROCEDURE %SCHEMA%.' + QUOTENAME(ROUTINE_NAME) + ';' + CHAR(13)
	FROM INFORMATION_SCHEMA.ROUTINES
	WHERE ROUTINE_SCHEMA = @Schema
		AND ROUTINE_TYPE = 'PROCEDURE'
	ORDER BY ROUTINE_NAME

	--Functions
	SELECT @Sql = COALESCE(@Sql,'') + 'DROP FUNCTION %SCHEMA%.' + QUOTENAME(ROUTINE_NAME) + ';' + CHAR(13)
	FROM INFORMATION_SCHEMA.ROUTINES
	WHERE ROUTINE_SCHEMA = @Schema
		AND ROUTINE_TYPE = 'FUNCTION'
	ORDER BY ROUTINE_NAME

	SELECT @Sql = COALESCE(REPLACE(@Sql,'%SCHEMA%',@Schema), '')
	EXEC sp_sqlexec @Sql
END
GO


/* -------------------------------------------------------------------------------------------------
 * Creamos los store procedures
 * -------------------------------------------------------------------------------------------------
 */

CREATE PROCEDURE LOS_SEQUEL_BLINDERS_BI.sp_borrar_tabla (@tabla VARCHAR(30)) AS
BEGIN
	DECLARE @SqlDel VARCHAR(MAX), @esquema VARCHAR(30) = 'LOS_SEQUEL_BLINDERS_BI'
	IF ( EXISTS(
		SELECT 
			TABLE_NAME
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = @tabla
		AND	  TABLE_SCHEMA = @esquema)
	)
	BEGIN
		SET @SqlDel = 'DROP TABLE ['+ @esquema +'].' + QUOTENAME(@tabla) + ';'
		EXEC sp_sqlexec @SqlDel
		print @SqlDel
	END
END
GO

CREATE PROCEDURE LOS_SEQUEL_BLINDERS_BI.sp_borrar_vista (@vista VARCHAR(30)) AS
BEGIN
	DECLARE @SqlDel VARCHAR(MAX), @esquema VARCHAR(30) = 'LOS_SEQUEL_BLINDERS_BI'
	IF ( EXISTS(
		SELECT 
			TABLE_NAME
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = @vista
		AND	  TABLE_SCHEMA = @esquema)
	)
	BEGIN
		SET @SqlDel = 'DROP VIEW ['+ @esquema +'].' + QUOTENAME(@vista) + ';'
		EXEC sp_sqlexec @SqlDel
		print @SqlDel
	END
END
GO

CREATE FUNCTION LOS_SEQUEL_BLINDERS_BI.fx_cantidad_camas (@tipo_habitacion int) RETURNS int
BEGIN
	DECLARE @cant INT = 0;

	SELECT
		@cant =
		CASE
			WHEN TIPO_HABITACION_DESC = 'Base Simple'	 THEN 1
			WHEN TIPO_HABITACION_DESC = 'Base Doble'	 THEN 2
			WHEN TIPO_HABITACION_DESC = 'Base Triple'	 THEN 3
			WHEN TIPO_HABITACION_DESC = 'Base Cuadruple' THEN 4
			WHEN TIPO_HABITACION_DESC = 'King'			 THEN 1
		END
	FROM LOS_SEQUEL_BLINDERS.TIPO_HABITACION
	WHERE TIPO_HABITACION_CODIGO = @tipo_habitacion

	RETURN @cant;
END
GO

/* -------------------------------------------------------------------------------------------------
 * Borramos las tablas en el orden correcto para no tener problemas con las FK
 * -------------------------------------------------------------------------------------------------
 */
exec LOS_SEQUEL_BLINDERS_BI.sp_borrar_vista 'VW_COMPRAS_PROVEEDOR_TRIMESTRE';
exec LOS_SEQUEL_BLINDERS_BI.sp_borrar_vista 'VW_VENTAS_SUCURSAL_TRIMESTRE';
exec LOS_SEQUEL_BLINDERS_BI.sp_borrar_vista 'VW_TOTALES_PRODUCTO_PERIODO';
exec LOS_SEQUEL_BLINDERS_BI.sp_borrar_tabla 'COMPRAS';
exec LOS_SEQUEL_BLINDERS_BI.sp_borrar_tabla 'VENTAS';
exec LOS_SEQUEL_BLINDERS_BI.sp_borrar_tabla 'TABLA_LINK_COMPRA_VENTA';
exec LOS_SEQUEL_BLINDERS_BI.sp_borrar_tabla 'SUCURSAL';
exec LOS_SEQUEL_BLINDERS_BI.sp_borrar_tabla 'CLIENTE';
exec LOS_SEQUEL_BLINDERS_BI.sp_borrar_tabla 'EMPRESA';
exec LOS_SEQUEL_BLINDERS_BI.sp_borrar_tabla 'BUTACA_TIPO';
exec LOS_SEQUEL_BLINDERS_BI.sp_borrar_tabla 'AVION';
exec LOS_SEQUEL_BLINDERS_BI.sp_borrar_tabla 'TIPO_HABITACION';
exec LOS_SEQUEL_BLINDERS_BI.sp_borrar_tabla 'RUTA';
exec LOS_SEQUEL_BLINDERS_BI.sp_borrar_tabla 'CIUDAD';
exec LOS_SEQUEL_BLINDERS_BI.sp_borrar_tabla 'CALENDARIO';

/* -------------------------------------------------------------------------------------------------
 * Creamos las tablas
 * -------------------------------------------------------------------------------------------------
 */

CREATE TABLE LOS_SEQUEL_BLINDERS_BI.CALENDARIO(	
	AÑO_MES CHAR(6) PRIMARY KEY,
	AÑO_TRIMESTRE CHAR(7),
	AÑO INT NOT NULL,
)

CREATE TABLE LOS_SEQUEL_BLINDERS_BI.SUCURSAL(	
	[SUCURSAL_ID] int PRIMARY KEY,
	[SUCURSAL_DIR] [nvarchar](255) NOT NULL,
	[SUCURSAL_MAIL] [nvarchar](255) NOT NULL,
	[SUCURSAL_TELEFONO] [decimal](18, 0) NOT NULL
)

CREATE TABLE LOS_SEQUEL_BLINDERS_BI.CLIENTE(
	[CLIENTE_ID] int PRIMARY KEY,
	[CLIENTE_APELLIDO] [nvarchar](255) NOT NULL,
	[CLIENTE_NOMBRE] [nvarchar](255) NOT NULL,
	[CLIENTE_DNI] [decimal](18, 0) NOT NULL,
	[CLIENTE_FECHA_NAC] [datetime2](3) NOT NULL,
	[CLIENTE_MAIL] [nvarchar](255) NOT NULL,
	[CLIENTE_TELEFONO] [int] NOT NULL,
)

CREATE TABLE LOS_SEQUEL_BLINDERS_BI.EMPRESA(
	EMPRESA_ID int PRIMARY KEY,
	EMPRESA_RAZON_SOCIAL NVARCHAR(255) NOT NULL
)

CREATE TABLE LOS_SEQUEL_BLINDERS_BI.BUTACA_TIPO(
	BUTACA_TIPO_ID INT PRIMARY KEY NOT NULL,
	BUTACA_TIPO_DESC NVARCHAR(255) NOT NULL
)

CREATE TABLE LOS_SEQUEL_BLINDERS_BI.AVION(
	AVION_IDENTIFICADOR NVARCHAR(50) PRIMARY KEY,
	AVION_MODELO NVARCHAR(50)
)

CREATE TABLE LOS_SEQUEL_BLINDERS_BI.TIPO_HABITACION(
	TIPO_HABITACION_CODIGO decimal(18, 0) PRIMARY KEY,
	TIPO_HABITACION_DESC NVARCHAR(100) NOT NULL
)

CREATE TABLE LOS_SEQUEL_BLINDERS_BI.CIUDAD(
	CIUDAD_ID INT PRIMARY KEY,
	CIUDAD_NOMBRE NVARCHAR(255) NOT NULL
)

CREATE TABLE LOS_SEQUEL_BLINDERS_BI.RUTA(
	RUTA_ID INT PRIMARY KEY,
	RUTA_AEREA_CODIGO DECIMAL(18,0) NOT NULL,
	CIU_ORIG_ID INT FOREIGN KEY REFERENCES LOS_SEQUEL_BLINDERS_BI.CIUDAD(CIUDAD_ID),
	CIU_DEST_ID INT FOREIGN KEY REFERENCES LOS_SEQUEL_BLINDERS_BI.CIUDAD(CIUDAD_ID)
)

CREATE TABLE LOS_SEQUEL_BLINDERS_BI.TABLA_LINK_COMPRA_VENTA(
	KEY_COMPRA_VENTA INT PRIMARY KEY IDENTITY,
	RUTA_ID INT	REFERENCES LOS_SEQUEL_BLINDERS_BI.RUTA(RUTA_ID),
	AÑO_MES CHAR(6) REFERENCES LOS_SEQUEL_BLINDERS_BI.CALENDARIO(AÑO_MES),
	TIPO_HABITACION_ID decimal(18, 0) REFERENCES LOS_SEQUEL_BLINDERS_BI.TIPO_HABITACION(TIPO_HABITACION_CODIGO),
	AVION_ID NVARCHAR(50) REFERENCES LOS_SEQUEL_BLINDERS_BI.AVION(AVION_IDENTIFICADOR),
	BUTACA_TIPO_ID INT REFERENCES LOS_SEQUEL_BLINDERS_BI.BUTACA_TIPO(BUTACA_TIPO_ID),
	TRANSACCION_PRODUCTO VARCHAR(30) CHECK(TRANSACCION_PRODUCTO IN ('ESTADIA','PASAJE'))
 )

CREATE TABLE LOS_SEQUEL_BLINDERS_BI.COMPRAS(
	KEY_COMPRA_VENTA INT REFERENCES LOS_SEQUEL_BLINDERS_BI.TABLA_LINK_COMPRA_VENTA(KEY_COMPRA_VENTA),
	PROVEEDOR_ID INT REFERENCES LOS_SEQUEL_BLINDERS_BI.EMPRESA(EMPRESA_ID),
	MONTO_COMPRAS DECIMAL(18,2),
	CANTIDAD_COMPRAS INT,
	CANTIDAD_CAMAS INT,
	CONSTRAINT PK_BI_COMPRAS PRIMARY KEY (KEY_COMPRA_VENTA, PROVEEDOR_ID)
)

CREATE TABLE LOS_SEQUEL_BLINDERS_BI.VENTAS(
	KEY_COMPRA_VENTA INT REFERENCES LOS_SEQUEL_BLINDERS_BI.TABLA_LINK_COMPRA_VENTA(KEY_COMPRA_VENTA),
	CLIENTE_ID INT REFERENCES LOS_SEQUEL_BLINDERS_BI.CLIENTE(CLIENTE_ID),
	SUCURSAL_ID INT REFERENCES LOS_SEQUEL_BLINDERS_BI.SUCURSAL(SUCURSAL_ID),
	MONTO_VENTAS DECIMAL(18,2),
	MONTO_GANANCIAS DECIMAL(18,2),
	CANTIDAD_VENTAS INT,
	CANTIDAD_CAMAS INT,
	CONSTRAINT PK_BI_VENTAS PRIMARY KEY (KEY_COMPRA_VENTA, CLIENTE_ID, SUCURSAL_ID)
)


/* -------------------------------------------------------------------------------------------------
 * Cargamos los datos en las tablas
 * -------------------------------------------------------------------------------------------------
 */
-- CALENDARIO
INSERT INTO LOS_SEQUEL_BLINDERS_BI.CALENDARIO
SELECT DISTINCT
	CONCAT(YEAR(C.COMPRA_FECHA), FORMAT(MONTH(C.COMPRA_FECHA),'00'))	AS AÑO_MES,
	CAST(YEAR(C.COMPRA_FECHA) AS VARCHAR(4)) + ' ' +
	CASE
		WHEN MONTH(C.COMPRA_FECHA) <= 3 THEN 'Q1'
		WHEN MONTH(C.COMPRA_FECHA) <= 6 THEN 'Q2'
		WHEN MONTH(C.COMPRA_FECHA) <= 9 THEN 'Q3'
		ELSE								 'Q4'
	END																	AS AÑO_TRIMESTRE,
	YEAR(C.COMPRA_FECHA)												AS AÑO
FROM LOS_SEQUEL_BLINDERS.COMPRA C
UNION
SELECT DISTINCT
	CONCAT(YEAR(F.FACTURA_FECHA), FORMAT(MONTH(F.FACTURA_FECHA),'00'))	AS AÑO_MES,
	CAST(YEAR(F.FACTURA_FECHA) AS VARCHAR(4)) + ' ' +
	CASE
		WHEN MONTH(F.FACTURA_FECHA) <= 3 THEN 'Q1'
		WHEN MONTH(F.FACTURA_FECHA) <= 6 THEN 'Q2'
		WHEN MONTH(F.FACTURA_FECHA) <= 9 THEN 'Q3'
		ELSE								 'Q4'
	END																	AS AÑO_TRIMESTRE,
	YEAR(F.FACTURA_FECHA)												AS AÑO
FROM LOS_SEQUEL_BLINDERS.FACTURA F;

-- SUCURSAL
INSERT INTO LOS_SEQUEL_BLINDERS_BI.SUCURSAL
SELECT 
	*
FROM LOS_SEQUEL_BLINDERS.SUCURSAL;


-- CLIENTE
INSERT INTO LOS_SEQUEL_BLINDERS_BI.CLIENTE
SELECT 
	*
FROM LOS_SEQUEL_BLINDERS.CLIENTE;


-- EMPRESA
INSERT INTO LOS_SEQUEL_BLINDERS_BI.EMPRESA
SELECT 
	*
FROM LOS_SEQUEL_BLINDERS.EMPRESA;


-- BUTACA_TIPO
INSERT INTO LOS_SEQUEL_BLINDERS_BI.BUTACA_TIPO
SELECT 
	*
FROM LOS_SEQUEL_BLINDERS.BUTACA_TIPO;


-- AVION
INSERT INTO LOS_SEQUEL_BLINDERS_BI.AVION
SELECT 
	*
FROM LOS_SEQUEL_BLINDERS.AVION;


-- TIPO_HABITACION
INSERT INTO LOS_SEQUEL_BLINDERS_BI.TIPO_HABITACION
SELECT 
	*
FROM LOS_SEQUEL_BLINDERS.TIPO_HABITACION;


-- CIUDAD
INSERT INTO LOS_SEQUEL_BLINDERS_BI.CIUDAD
SELECT 
	*
FROM LOS_SEQUEL_BLINDERS.CIUDAD;


-- RUTA
INSERT INTO LOS_SEQUEL_BLINDERS_BI.RUTA
SELECT 
	*
FROM LOS_SEQUEL_BLINDERS.RUTA;


-- TABLA_LINK_COMPRA_VENTAS
INSERT INTO LOS_SEQUEL_BLINDERS_BI.TABLA_LINK_COMPRA_VENTA
SELECT DISTINCT
	VU.RUTA_ID															AS RUTA_ID,
	CONCAT(YEAR(C.COMPRA_FECHA), FORMAT(MONTH(C.COMPRA_FECHA),'00'))	AS AÑO_MES,
	HA.TIPO_HABITACION_CODIGO											AS TIPO_HABITACION_ID,
	VU.AVION_IDENTIFICADOR												AS AVION_ID,
	BU.BUTACA_TIPO_ID													AS BUTACA_TIPO_ID,
	CASE
		WHEN OXP.PASAJE_CODIGO IS NOT NULL
		THEN 'PASAJE'
		ELSE 'ESTADIA'
	END															AS TRANSACCION_PRODUCTO
FROM LOS_SEQUEL_BLINDERS.COMPRA C
LEFT JOIN LOS_SEQUEL_BLINDERS.OPERACION_X_PRODUCTO OXP ON C.COMPRA_NRO = OXP.COMPRA_NRO
LEFT JOIN LOS_SEQUEL_BLINDERS.PASAJE PA	ON OXP.PASAJE_CODIGO = PA.PASAJE_CODIGO
LEFT JOIN LOS_SEQUEL_BLINDERS.VUELO VU ON PA.VUELO_CODIGO = VU.VUELO_CODIGO
LEFT JOIN LOS_SEQUEL_BLINDERS.BUTACA BU ON PA.BUTACA_ID = BU.BUTACA_ID
LEFT JOIN LOS_SEQUEL_BLINDERS.ESTADIA ES ON OXP.ESTADIA_CODIGO = ES.ESTADIA_CODIGO
LEFT JOIN LOS_SEQUEL_BLINDERS.HABITACION HA ON ES.HABITACION_ID = HA.HABITACION_ID
UNION
SELECT DISTINCT
	VU.RUTA_ID															AS RUTA_ID,
	CONCAT(YEAR(F.FACTURA_FECHA), FORMAT(MONTH(F.FACTURA_FECHA),'00'))	AS AÑO_MES,
	HA.TIPO_HABITACION_CODIGO											AS TIPO_HABITACION_ID,
	VU.AVION_IDENTIFICADOR												AS AVION_ID,
	BU.BUTACA_TIPO_ID													AS BUTACA_TIPO_ID,
	CASE
		WHEN OXP.PASAJE_CODIGO IS NOT NULL
		THEN 'PASAJE'
		ELSE 'ESTADIA'
	END																	AS TRANSACCION_PRODUCTO
FROM LOS_SEQUEL_BLINDERS.FACTURA F
LEFT JOIN LOS_SEQUEL_BLINDERS.OPERACION_X_PRODUCTO OXP ON F.FACTURA_NRO = OXP.FACTURA_NRO
LEFT JOIN LOS_SEQUEL_BLINDERS.PASAJE PA	ON OXP.PASAJE_CODIGO = PA.PASAJE_CODIGO
LEFT JOIN LOS_SEQUEL_BLINDERS.VUELO VU ON PA.VUELO_CODIGO = VU.VUELO_CODIGO
LEFT JOIN LOS_SEQUEL_BLINDERS.BUTACA BU ON PA.BUTACA_ID = BU.BUTACA_ID
LEFT JOIN LOS_SEQUEL_BLINDERS.ESTADIA ES ON OXP.ESTADIA_CODIGO = ES.ESTADIA_CODIGO
LEFT JOIN LOS_SEQUEL_BLINDERS.HABITACION HA ON ES.HABITACION_ID = HA.HABITACION_ID;


-- COMPRAS
INSERT INTO LOS_SEQUEL_BLINDERS_BI.COMPRAS
SELECT
	ISNULL(CV1.KEY_COMPRA_VENTA,CV2.KEY_COMPRA_VENTA)							AS KEY_COMPRA_VENTA,
	C.EMPRESA_ID																AS PROVEEDOR_ID,
	SUM(ISNULL(ESTADIA_COSTO,0))+SUM(ISNULL(PASAJE_COSTO,0))					AS MONTO_COMPRAS,
	COUNT(DISTINCT C.COMPRA_NRO)												AS CANTIDAD_COMPRAS,
	SUM(LOS_SEQUEL_BLINDERS_BI.fx_cantidad_camas(HA.TIPO_HABITACION_CODIGO))	AS CANTIDAD_CAMAS
FROM LOS_SEQUEL_BLINDERS.COMPRA C
LEFT JOIN LOS_SEQUEL_BLINDERS.OPERACION_X_PRODUCTO OXP ON C.COMPRA_NRO = OXP.COMPRA_NRO
LEFT JOIN LOS_SEQUEL_BLINDERS.PASAJE PA	ON OXP.PASAJE_CODIGO = PA.PASAJE_CODIGO
LEFT JOIN LOS_SEQUEL_BLINDERS.VUELO VU ON PA.VUELO_CODIGO = VU.VUELO_CODIGO
LEFT JOIN LOS_SEQUEL_BLINDERS.BUTACA BU ON PA.BUTACA_ID = BU.BUTACA_ID
LEFT JOIN LOS_SEQUEL_BLINDERS.ESTADIA ES ON OXP.ESTADIA_CODIGO = ES.ESTADIA_CODIGO
LEFT JOIN LOS_SEQUEL_BLINDERS.HABITACION HA ON ES.HABITACION_ID = HA.HABITACION_ID
LEFT JOIN LOS_SEQUEL_BLINDERS_BI.TABLA_LINK_COMPRA_VENTA CV1
	ON  CV1.AVION_ID = VU.AVION_IDENTIFICADOR
	AND CV1.BUTACA_TIPO_ID = BU.BUTACA_TIPO_ID
	AND CV1.RUTA_ID = VU.RUTA_ID
	AND CV1.AÑO_MES = CONCAT(YEAR(C.COMPRA_FECHA), FORMAT(MONTH(C.COMPRA_FECHA),'00'))
	AND CV1.TRANSACCION_PRODUCTO = 'PASAJE'
LEFT JOIN LOS_SEQUEL_BLINDERS_BI.TABLA_LINK_COMPRA_VENTA CV2
	ON  CV2.TIPO_HABITACION_ID = HA.TIPO_HABITACION_CODIGO
	AND CV2.AÑO_MES = CONCAT(YEAR(C.COMPRA_FECHA), FORMAT(MONTH(C.COMPRA_FECHA),'00'))
	AND CV2.TRANSACCION_PRODUCTO = 'ESTADIA'
GROUP BY ISNULL(CV1.KEY_COMPRA_VENTA,CV2.KEY_COMPRA_VENTA), C.EMPRESA_ID;


-- VENTAS
INSERT INTO LOS_SEQUEL_BLINDERS_BI.VENTAS
SELECT
	ISNULL(CV1.KEY_COMPRA_VENTA,CV2.KEY_COMPRA_VENTA)							AS KEY_COMPRA_VENTA,
	F.CLIENTE_ID																AS CLIENTE_ID,
	F.SUCURSAL_ID																AS SUCURSAL_ID,
	SUM(ISNULL(ESTADIA_PRECIO,0))+SUM(ISNULL(PASAJE_PRECIO,0))					AS MONTO_VENTAS,
	SUM(ISNULL(ESTADIA_PRECIO,0))+SUM(ISNULL(PASAJE_PRECIO,0))
	- SUM(ISNULL(ESTADIA_COSTO,0))-SUM(ISNULL(PASAJE_COSTO,0))					AS MONTO_GANANCIAS,
	COUNT(DISTINCT F.FACTURA_NRO)												AS CANTIDAD_VENTAS,
	SUM(LOS_SEQUEL_BLINDERS_BI.fx_cantidad_camas(HA.TIPO_HABITACION_CODIGO))	AS CANTIDAD_CAMAS
FROM LOS_SEQUEL_BLINDERS.FACTURA F
LEFT JOIN LOS_SEQUEL_BLINDERS.OPERACION_X_PRODUCTO OXP ON F.FACTURA_NRO = OXP.FACTURA_NRO
LEFT JOIN LOS_SEQUEL_BLINDERS.PASAJE PA	ON OXP.PASAJE_CODIGO = PA.PASAJE_CODIGO
LEFT JOIN LOS_SEQUEL_BLINDERS.VUELO VU ON PA.VUELO_CODIGO = VU.VUELO_CODIGO
LEFT JOIN LOS_SEQUEL_BLINDERS.BUTACA BU ON PA.BUTACA_ID = BU.BUTACA_ID
LEFT JOIN LOS_SEQUEL_BLINDERS.ESTADIA ES ON OXP.ESTADIA_CODIGO = ES.ESTADIA_CODIGO
LEFT JOIN LOS_SEQUEL_BLINDERS.HABITACION HA ON ES.HABITACION_ID = HA.HABITACION_ID
LEFT JOIN LOS_SEQUEL_BLINDERS_BI.TABLA_LINK_COMPRA_VENTA CV1
	ON  CV1.AVION_ID = VU.AVION_IDENTIFICADOR
	AND CV1.BUTACA_TIPO_ID = BU.BUTACA_TIPO_ID
	AND CV1.RUTA_ID = VU.RUTA_ID
	AND CV1.AÑO_MES = CONCAT(YEAR(F.FACTURA_FECHA), FORMAT(MONTH(F.FACTURA_FECHA),'00'))
	AND CV1.TRANSACCION_PRODUCTO = 'PASAJE'
LEFT JOIN LOS_SEQUEL_BLINDERS_BI.TABLA_LINK_COMPRA_VENTA CV2
	ON  CV2.TIPO_HABITACION_ID = HA.TIPO_HABITACION_CODIGO
	AND CV2.AÑO_MES = CONCAT(YEAR(F.FACTURA_FECHA), FORMAT(MONTH(F.FACTURA_FECHA),'00'))
	AND CV2.TRANSACCION_PRODUCTO = 'ESTADIA'
GROUP BY ISNULL(CV1.KEY_COMPRA_VENTA,CV2.KEY_COMPRA_VENTA), F.CLIENTE_ID, F.SUCURSAL_ID;
GO

/* -------------------------------------------------------------------------------------------------
 * Creamos las vistas
 * -------------------------------------------------------------------------------------------------
 */

-- VISTA DE TOTALES POR TIPO DE PRODUCTO Y AÑO_MES
CREATE VIEW LOS_SEQUEL_BLINDERS_BI.VW_TOTALES_PRODUCTO_PERIODO AS
SELECT
	AÑO_MES										AS AÑO_MES,
	TRANSACCION_PRODUCTO						AS TIPO_PRODUCTO,
	SUM(MONTO_COMPRAS)/SUM(CANTIDAD_COMPRAS)	AS PROMEDIO_COMPRAS,
	SUM(MONTO_VENTAS)/SUM(CANTIDAD_VENTAS)		AS PROMEDIO_VENTAS,
	SUM(MONTO_COMPRAS)							AS TOTAL_COMPRAS,
	SUM(MONTO_VENTAS)							AS TOTAL_VENTAS,
	SUM(MONTO_GANANCIAS)						AS TOTAL_GANANCIAS
FROM LOS_SEQUEL_BLINDERS_BI.TABLA_LINK_COMPRA_VENTA L
LEFT JOIN LOS_SEQUEL_BLINDERS_BI.COMPRAS C ON L.KEY_COMPRA_VENTA = C.KEY_COMPRA_VENTA
LEFT JOIN LOS_SEQUEL_BLINDERS_BI.VENTAS V ON V.KEY_COMPRA_VENTA = L.KEY_COMPRA_VENTA
GROUP BY AÑO_MES, TRANSACCION_PRODUCTO
GO

-- VISTA DE VENTAS POR SUCURSAL
CREATE VIEW LOS_SEQUEL_BLINDERS_BI.VW_VENTAS_SUCURSAL_TRIMESTRE AS
SELECT
	AÑO_TRIMESTRE								AS TRIMESTRE,
	S.SUCURSAL_ID								AS SUCURSAL_ID,
	S.SUCURSAL_DIR								AS SUCURSAL_DIRECCION,
	SUM(MONTO_VENTAS)/SUM(CANTIDAD_VENTAS)		AS PROMEDIO_VENTAS,
	SUM(MONTO_VENTAS)							AS TOTAL_VENTAS,
	SUM(MONTO_GANANCIAS)						AS TOTAL_GANANCIAS
FROM LOS_SEQUEL_BLINDERS_BI.TABLA_LINK_COMPRA_VENTA L
INNER JOIN LOS_SEQUEL_BLINDERS_BI.VENTAS V ON V.KEY_COMPRA_VENTA = L.KEY_COMPRA_VENTA
LEFT JOIN LOS_SEQUEL_BLINDERS_BI.CALENDARIO C ON C.AÑO_MES = L.AÑO_MES 
LEFT JOIN LOS_SEQUEL_BLINDERS_BI.SUCURSAL S ON S.SUCURSAL_ID = V.SUCURSAL_ID
GROUP BY AÑO_TRIMESTRE, S.SUCURSAL_ID, S.SUCURSAL_DIR
GO

-- VISTA DE COMPRAS POR PROVEEDOR
CREATE VIEW LOS_SEQUEL_BLINDERS_BI.VW_COMPRAS_PROVEEDOR_TRIMESTRE AS
SELECT
	AÑO_TRIMESTRE								AS TRIMESTRE,
	PROVEEDOR_ID								AS PROVEEDOR_ID,
	EMPRESA_RAZON_SOCIAL						AS PROVEEDOR_RAZON_SOCIAL,
	SUM(MONTO_COMPRAS)/SUM(CANTIDAD_COMPRAS)	AS PROMEDIO_COMPRAS,
	SUM(MONTO_COMPRAS)							AS TOTAL_COMPRAS
FROM LOS_SEQUEL_BLINDERS_BI.TABLA_LINK_COMPRA_VENTA L
INNER JOIN LOS_SEQUEL_BLINDERS_BI.COMPRAS CO ON CO.KEY_COMPRA_VENTA = L.KEY_COMPRA_VENTA
LEFT JOIN LOS_SEQUEL_BLINDERS_BI.CALENDARIO C ON C.AÑO_MES = L.AÑO_MES 
LEFT JOIN LOS_SEQUEL_BLINDERS_BI.EMPRESA E ON E.EMPRESA_ID = CO.PROVEEDOR_ID
GROUP BY AÑO_TRIMESTRE, PROVEEDOR_ID, EMPRESA_RAZON_SOCIAL
GO